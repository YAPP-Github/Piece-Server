package org.yapp.core.similarity.scripts;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.DoubleSummaryStatistics;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;
import lombok.extern.slf4j.Slf4j;
import org.yapp.core.similarity.DocumentSimilarityUtils;
import org.yapp.core.similarity.pipeline.SimilarityPipeline;


@Slf4j
class SimilarityThresholdAnalysis {


    private List<SimilarityPipeline> pipelines = List.of(

        DocumentSimilarityUtils.createKoreanJaccardPipeline(),
        DocumentSimilarityUtils.createKoreanTfCosinePipeline(),
        DocumentSimilarityUtils.createKoreanTfIdfCosinePipeline(),
        DocumentSimilarityUtils.createKoreanBM25CosinePipeline()
    );


    private record LabeledTextPair(String text1, String text2, String label) {

    }


    private final List<LabeledTextPair> dataset = List.of(

// "매우 유사함" 그룹 (30개)

        new LabeledTextPair(
            "저는 맡은 바 업무에 대해 강한 책임감을 느끼고, 정해진 기한 내에 최고의 성과를 내기 위해 꾸준히 노력하는 성실한 인재입니다. 동료들에게 신뢰를 주는 것을 가장 중요한 가치로 생각하며, 함께 일하고 싶은 사람이 되는 것을 목표로 삼고 있습니다.",
            "주어진 업무는 반드시 완수해내는 책임감 있는 태도를 지니고 있으며, 꾸준하고 성실한 자세로 업무에 임하여 팀의 목표 달성에 기여합니다. 신뢰할 수 있는 동료가 되는 것이 저의 가장 큰 장점이라고 생각하며, 이를 위해 항상 최선을 다합니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 새로운 기술을 배우고 적용하는 과정에서 큰 즐거움을 느낍니다. 빠르게 변화하는 IT 환경에 적응하고, 더 나은 개발자로 성장하기 위해 최신 기술 동향을 꾸준히 학습하며 자기계발에 힘쓰고 있습니다. 이는 저의 가장 큰 동기부여 요소입니다.",
            "새로운 기술을 학습하고 이를 실제 프로젝트에 적용해보는 것을 즐깁니다. 끊임없이 발전하는 기술 생태계 속에서 뒤처지지 않고, 지속적으로 성장하는 개발자가 되기 위해 스터디와 개인 프로젝트를 통해 꾸준히 역량을 강화하고 있습니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "팀원들과의 긴밀한 협력을 통해 시너지를 창출하는 것을 매우 중요하게 생각합니다. 각자의 강점을 살리고 서로의 부족한 점을 보완하며 공동의 목표를 달성할 때 가장 큰 보람을 느끼며, 이것이 곧 팀의 성공으로 이어진다고 믿습니다.",
            "저는 협업을 통해 더 큰 가치를 만들어내는 과정 자체를 중요시합니다. 동료들과 아이디어를 공유하고, 서로 피드백을 주고받으며 함께 성장할 때 팀 전체의 역량이 극대화된다고 생각하며, 이러한 시너지 창출에 기여하고 싶습니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 저에게 주어진 일에 대해서는 언제나 최선을 다하는 태도를 가지고 있습니다. 단순히 업무를 완수하는 것을 넘어, 어떻게 하면 더 나은 결과물을 만들 수 있을지 항상 고민하며, 주인의식을 가지고 모든 일에 임하려고 노력합니다.",
            "맡은 바에 대해서는 최고의 결과물을 내기 위해 항상 전력을 다합니다. 주어진 책임과 역할을 완벽하게 수행하기 위해 노력하는 것은 물론, 스스로 개선점을 찾아내고 더 높은 수준의 결과물을 만들기 위해 끊임없이 탐구하는 자세를 갖추고 있습니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "어려운 문제에 직면했을 때, 저는 그 문제의 본질을 이해하기 위해 깊이 파고드는 것을 즐깁니다. 복잡하게 얽힌 이슈의 근본 원인을 분석하고, 논리적인 과정을 통해 최적의 해결책을 찾아내는 과정에서 큰 성취감을 느낍니다.",
            "저는 복잡하고 어려운 문제가 발생했을 때, 포기하지 않고 깊이 있게 탐구하여 해결책을 찾아내는 것을 좋아합니다. 문제의 핵심을 파악하고, 다양한 관점에서 접근하여 가장 효율적이고 합리적인 해결 방안을 도출해내는 과정 자체를 즐깁니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 한 번 배우고 끝나는 것이 아니라, 꾸준한 학습과 경험을 통해 지속적으로 성장하는 것을 목표로 하는 개발자입니다. 어제보다 오늘 더 나은 개발자가 되기 위해, 매일 새로운 지식을 습득하고 부족한 점을 채워나가려고 노력합니다.",
            "개발자로서 꾸준히 성장하는 것을 저의 가장 중요한 목표로 삼고 있습니다. 현재에 안주하지 않고, 끊임없이 새로운 기술을 익히고 동료들과 지식을 공유하며 함께 발전해나가는 과정 속에서 진정한 개발자의 가치를 찾을 수 있다고 믿습니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "사용자의 입장에서 서비스를 바라보고, 그들의 불편함을 해소하여 더 나은 사용자 경험(UX)을 만들어나가는 과정에서 큰 보람과 기쁨을 느낍니다. 제가 만든 코드가 사용자에게 실질적인 가치를 제공할 때 가장 큰 성취감을 느낍니다.",
            "저는 더 나은 사용자 경험을 제공하기 위해 서비스를 개선하는 과정에서 큰 보람을 느낍니다. 사용자의 피드백을 경청하고, 데이터 분석을 통해 문제점을 파악하여 실질적인 개선으로 이어질 때, 개발자로서의 만족감이 가장 크다고 생각합니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 함께 일하는 동료들이 쉽게 이해하고 수정할 수 있도록, 코드의 가독성과 장기적인 유지보수성을 확보하는 것을 매우 중요하게 생각합니다. 좋은 코드는 단순히 동작하는 코드가 아니라, 함께 만들어나가는 코드라고 믿습니다.",
            "유지보수하기 좋고 가독성 높은 코드를 작성하는 것을 저의 중요한 개발 원칙으로 삼고 있습니다. 미래의 동료나 제 자신이 코드를 다시 보았을 때, 큰 노력 없이도 쉽게 이해하고 개선할 수 있어야 진정으로 좋은 코드라고 생각합니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 동료들과 서로가 가진 지식과 경험을 적극적으로 공유하며 다 같이 성장하는 개발 문화를 만들고 싶습니다. 코드 리뷰, 페어 프로그래밍, 스터디 등을 통해 서로에게 배우고 긍정적인 자극을 주는 환경에서 일하고 싶습니다.",
            "팀원들과 서로 지식을 나누고 함께 성장하는 환경을 만드는 데 기여하고 싶습니다. 제가 아는 것을 동료에게 공유하고, 동료의 경험을 통해 배우면서 함께 발전할 때, 개인과 팀 모두가 가장 빠르게 성장할 수 있다고 굳게 믿습니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 새로운 도전이나 어려운 과제가 주어졌을 때, 그것을 두려워하기보다는 성장의 기회로 여기는 열정을 가지고 있습니다. 익숙하지 않은 분야라도 적극적으로 부딪히고 해결해나가는 과정에서 더 많은 것을 배울 수 있다고 생각합니다.",
            "저는 도전을 즐기는 열정적인 사람입니다. 현재의 역량에 안주하지 않고, 끊임없이 새로운 목표를 설정하고 그것을 달성하기 위해 노력하는 과정에서 큰 동기부여를 얻습니다. 실패의 가능성보다는 성공의 가능성에 집중합니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저의 꼼꼼한 성격은 휴먼 에러를 최소화하고, 코드의 안정성을 높이는 데 큰 강점이 된다고 생각합니다. 배포 전 테스트 케이스를 꼼꼼히 작성하고, 다양한 예외 상황을 고려하여 발생할 수 있는 실수를 미연에 방지하려고 노력합니다.",
            "저는 실수를 줄이기 위해 여러 번 확인하는 꼼꼼한 습관을 가지고 있습니다. 특히 중요한 작업을 수행할 때는 체크리스트를 만들어 하나씩 검토하며, 잠재적인 위험 요소를 사전에 파악하고 제거함으로써 서비스의 안정성을 확보합니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 다른 사람의 지시를 기다리기보다, 스스로 팀에 필요한 일이 무엇인지 먼저 생각하고 주도적으로 업무를 찾아서 처리하는 것을 선호합니다. 능동적인 태도로 업무에 임할 때 더 높은 성과를 낼 수 있다고 믿습니다.",
            "누가 시키지 않아도 스스로 개선점을 찾고, 필요한 업무를 계획하여 주도적으로 일을 진행하는 편입니다. 팀의 목표 달성에 기여할 수 있는 일이라면 망설이지 않고 먼저 나서서 실행하며, 이를 통해 팀의 생산성을 높이는 데 기여합니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "개발 과정에서 예상치 못한 어려움이나 문제 상황에 직면하더라도, 저는 긍정적인 마인드를 잃지 않고 이를 극복해나갑니다. 문제 해결에 집중하고, 팀원들과 함께 해결책을 모색하며 긍정적인 분위기를 만들려고 노력합니다.",
            "어려운 상황에 처했을 때, 좌절하기보다는 긍정적인 태도를 유지하며 해결할 수 있다는 믿음을 가지려고 합니다. 이러한 긍정적인 마음가짐은 문제 해결에 큰 도움이 될 뿐만 아니라, 주변 동료들에게도 좋은 영향을 미친다고 생각합니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 단순히 코드를 작성하는 것을 넘어, 어떻게 하면 더 효율적인 개발 프로세스를 구축할 수 있을지 항상 고민합니다. 반복적인 작업을 자동화하고, 병목 현상을 개선하여 팀 전체의 생산성을 높이는 데 기여하고 싶습니다.",
            "어떻게 하면 팀이 더 효율적으로 개발할 수 있을지에 대해 늘 고민하고 개선 방안을 제안합니다. 불필요한 절차를 줄이고, 개발 도구를 개선하며, CI/CD 파이프라인을 최적화하는 등 개발 효율성을 높이기 위한 노력을 꾸준히 하고 있습니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 제 생각만이 옳다고 고집하지 않으며, 다양한 관점을 존중하는 열린 마음을 가졌습니다. 동료들의 의견을 경청하고, 다른 직군의 전문가들의 시각을 이해하려고 노력할 때 더 나은 제품을 만들 수 있다고 믿습니다.",
            "저는 다른 사람의 다양한 의견과 배경을 존중하는 태도를 중요하게 생각합니다. 나와 다른 생각을 가진 사람과의 대화를 통해 새로운 아이디어를 얻고, 편협한 시각에서 벗어나 더 넓은 관점에서 문제를 바라볼 수 있게 된다고 믿습니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "동료들의 피드백을 저에 대한 공격이 아닌, 성장을 위한 소중한 선물로 여기며 적극적으로 수용합니다. 코드 리뷰나 회고를 통해 받은 피드백을 바탕으로 저의 부족한 점을 객관적으로 파악하고, 이를 개선하기 위해 구체적인 계획을 세워 실천합니다.",
            "저는 동료들이 주는 피드백을 긍정적으로 받아들이고, 이를 통해 제 자신을 개선해나가는 것을 중요하게 생각합니다. 피드백은 제가 미처 보지 못했던 부분을 발견하게 해주는 좋은 기회이며, 더 나은 개발자로 성장하기 위한 필수적인 과정이라고 생각합니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 제가 개발한 서비스가 사용자에게 안정적으로 제공되는 것에 대해 강한 책임감을 느낍니다. 장애가 발생하지 않도록 견고한 코드를 작성하는 것은 물론, 발생 가능한 문제에 대비해 모니터링 시스템을 구축하고 빠르게 대응할 수 있는 체계를 갖추고자 합니다.",
            "서비스를 안정적으로 운영하고 사용자에게 끊김 없는 경험을 제공하는 것에 큰 책임감을 느낍니다. 이를 위해 방어적인 로그래밍 자세를 견지하고, 철저한 테스트와 모니터링을 통해 장애 발생 가능성을 최소화하기 위해 노력합니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 복잡하게 얽혀있는 비즈니스 로직을 핵심적인 부분만 남기고 단순화하여 명확한 코드로 구현하는 데 강점이 있습니다. 요구사항의 본질을 파악하고, 군더더기 없는 설계를 통해 이해하기 쉽고 유지보수하기 좋은 시스템을 만드는 것을 잘합니다.",
            "복잡한 비즈니스 요구사항을 분석하여, 이를 단순하고 명확한 구조의 코드로 재구성하는 능력이 뛰어납니다. 도메인에 대한 깊은 이해를 바탕으로, 불필요한 복잡성을 제거하고 핵심 로직을 간결하게 표현함으로써 시스템 전체의 안정성과 확장성을 높입니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "기술의 세계는 끊임없이 변화하기에, 저는 언제나 배우려는 자세를 잃지 않으려고 합니다. 오늘의 지식에 안주하지 않고, 새로운 기술과 개념을 끊임없이 학습하며 스스로를 발전시키는 것이 개발자의 숙명이라고 생각합니다.",
            "저는 경력과 상관없이 항상 배우는 자세로 모든 일에 임하는 것이 중요하다고 믿습니다. 동료, 책, 온라인 강의 등 배울 수 있는 모든 채널을 통해 새로운 지식을 습득하고, 이를 통해 어제보다 더 나은 전문가가 되기 위해 꾸준히 노력합니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 개인의 직감이나 주관적인 판단보다는, 수집된 데이터를 기반으로 합리적인 의사결정을 내리는 것을 매우 중요하게 생각합니다. 로그 분석, A/B 테스트 등의 데이터를 근거로 가설을 검증하고, 서비스의 방향을 결정해야 한다고 믿습니다.",
            "데이터를 근거로 객관적이고 합리적인 결정을 내리는 것을 중요시합니다. 사용자의 행동 데이터나 서비스의 성능 지표 등을 면밀히 분석하여 문제의 원인을 파악하고, 가장 효과적인 해결책을 도출하는 데이터 기반의 문제 해결 방식을 선호합니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 코드의 안정성과 신뢰도를 확보하기 위해, 자동화된 테스트 코드를 작성하는 것을 매우 중요하게 생각합니다. 테스트 자동화를 통해 잠재적인 버그를 사전에 발견하고, 리팩토링이나 기능 추가 시에도 시스템이 안정적으로 동작함을 보장할 수 있습니다.",
            "코드의 안정성을 확보하기 위한 가장 효과적인 방법은 테스트 자동화라고 생각하며, 이를 적극적으로 도입하고 실천합니다. 단위 테스트, 통합 테스트 등 다양한 종류의 자동화 테스트를 구축하여, 코드 변경에 대한 심리적 안정감을 높이고 제품의 품질을 향상시킵니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "수많은 사용자가 동시에 접속하는 대규모 트래픽 환경에서 발생하는 다양한 기술적 문제들을 직접 해결해보고 싶습니다. 성능 최적화, 분산 시스템 설계, 데이터 처리 등 대용량 서비스를 운영하며 얻을 수 있는 깊이 있는 경험을 쌓고 싶습니다.",
            "많은 사용자가 이용하는 대용량 트래픽 서비스를 직접 개발하고 운영해보고 싶습니다. 대규모 요청을 안정적으로 처리하기 위한 아키텍처를 설계하고, 발생할 수 있는 여러 성능 문제를 해결하면서 엔지니어로서 한 단계 더 성장하는 경험을 갈망합니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 서비스의 응답 속도를 개선하고, 시스템 자원을 효율적으로 사용하는 성능 최적화 분야에 대한 관심이 매우 많습니다. 병목 지점을 찾아내고, 코드 수준의 최적화부터 아키텍처 개선까지 다양한 방법을 통해 사용자에게 더 쾌적한 경험을 제공하고 싶습니다.",
            "어떻게 하면 서비스의 성능을 개선하여 사용자에게 더 빠른 경험을 제공할 수 있을지에 대해 늘 많은 관심을 가지고 있습니다. 프로파일링 도구를 사용하여 성능 저하의 원인을 분석하고, 알고리즘 개선, 캐시 전략 적용 등을 통해 시스템의 한계를 극복해나가는 과정에 흥미를 느낍니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 개발자로서, 그리고 한 명의 동료로서 정직과 신뢰를 가장 중요한 가치로 생각합니다. 투명한 소통을 바탕으로 동료들과 깊은 신뢰 관계를 형성하고, 이를 기반으로 함께 어려운 문제를 해결해나가는 과정에서 큰 보람을 느낍니다.",
            "정직함과 동료들과의 신뢰를 최우선 가치로 여기며, 모든 업무를 투명하고 솔직하게 처리하려고 노력합니다. 기술적인 역량만큼이나, 서로 믿고 의지할 수 있는 팀 문화를 만드는 것이 성공적인 프로젝트를 위해 필수적이라고 생각합니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 한번 목표를 세우면, 그 목표를 달성하기 위해 강한 추진력과 집중력을 발휘하는 목표 지향적인 성향을 가지고 있습니다. 중간에 어려움이 있더라도 쉽게 포기하지 않고, 어떻게든 해결책을 찾아내어 결국에는 목표를 달성해냅니다.",
            "한번 목표가 설정되면, 그 목표를 달성하기 위해 놀라운 집중력을 발휘하며 반드시 기간 내에 완수하려는 성향이 있습니다. 목표 달성을 위한 구체적인 계획을 세우고, 체계적으로 실행하며, 예상치 못한 문제에 부딪혔을 때도 끈기 있게 해결해 나갑니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 소프트웨어의 확장성과 유지보수성을 높이기 위해, 상황에 맞는 디자인 패턴을 학습하고 적절하게 활용하여 설계하는 것을 좋아합니다. 잘 설계된 구조는 미래의 변화에 유연하게 대처할 수 있게 하고, 팀의 개발 효율성을 높여준다고 믿습니다.",
            "좋은 설계를 위해 다양한 디자인 패턴을 꾸준히 공부하고, 이를 실제 프로젝트에 적용하여 문제 해결 능력을 향상시키는 것을 즐깁니다. 객체지향 설계 원칙과 디자인 패턴을 깊이 이해하고, 이를 바탕으로 견고하고 유연한 소프트웨어를 만드는 데 관심이 많습니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 동료가 기술적인 어려움이나 업무적인 고민을 겪고 있을 때, 저의 시간과 노력을 들여 돕는 것에서 큰 기쁨과 보람을 느낍니다. 함께 문제를 해결하고, 그 과정에서 동료가 성장하는 모습을 보는 것이 저에게는 큰 동기부여가 됩니다.",
            "동료가 어려운 문제로 힘들어할 때, 적극적으로 나서서 함께 고민하고 해결책을 찾아주며 도와주는 것에서 큰 기쁨을 느낍니다. 저의 작은 도움이 동료에게 힘이 되고, 팀 전체의 성공에 기여할 수 있다는 사실에 큰 보람을 느낍니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "기술 트렌드가 매우 빠르게 변화하는 시대에 살고 있기 때문에, 개발자로서 뒤처지지 않기 위해 항상 새로운 기술 동향을 주시하고 꾸준히 학습하려고 노력합니다. 최신 기술 아티클을 읽거나, 컨퍼런스에 참여하며 끊임없이 저 자신을 업데이트합니다.",
            "IT 기술은 하루가 다르게 발전하기 때문에, 현재의 지식에 안주하지 않고 빠르게 변화하는 기술 트렌드를 적극적으로 따라가려고 노력합니다. 새로운 기술이 어떤 문제를 해결하기 위해 등장했는지 이해하고, 이를 통해 더 나은 개발 방법을 모색합니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 실패를 두려워하여 시도조차 하지 않는 것을 가장 경계합니다. 실패는 성공으로 가는 과정에서 자연스러운 부분이라고 생각하며, 실패로부터 귀중한 교훈을 얻고 이를 발판 삼아 더 크게 성장하는 기회로 만들려고 노력합니다.",
            "실패에 대해 좌절하거나 두려워하기보다는, 그 원인을 철저히 분석하여 값진 교훈을 얻고 다음 도전을 위한 성장 동력으로 삼습니다. 모든 성공적인 결과 뒤에는 수많은 실패의 경험이 밑거름이 되었다고 믿으며, 실패를 성장의 과정으로 긍정합니다.",
            "매우 유사함"
        ),

        new LabeledTextPair(
            "저는 머릿속에 흩어져 있는 복잡한 생각이나 새롭게 배운 기술 지식을, 기술 블로그나 개인 노트에 글로 작성하면서 명확하게 정리하는 것을 좋아합니다. 글쓰기 과정은 깊이 있는 이해를 돕고, 나중에 다시 찾아볼 수 있는 좋은 자료가 됩니다.",
            "생각이 복잡하게 얽혀있을 때, 저는 기술 블로그에 글을 쓰거나 마인드맵을 그리면서 생각을 체계적으로 정리하는 것을 즐깁니다. 배운 내용을 다른 사람이 이해할 수 있도록 글로 설명하는 과정에서, 해당 지식이 비로소 온전히 제 것이 된다고 생각합니다.",
            "매우 유사함"
        ),

// "약간 유사함" 그룹 (30개)

        new LabeledTextPair(
            "저는 아이디어가 떠오르면 주저하지 않고 빠르게 실행에 옮기는 추진력을 갖추고 있으며, 새로운 분야에 대한 도전을 두려워하지 않는 강한 정신력을 가지고 있습니다. 실패하더라도 빠르게 배우고 다시 시도하는 것이 중요하다고 생각합니다.",
            "새로운 과제에 대해 두려움 없이 도전하는 것을 즐기며, 일단 방향이 정해지면 신속하게 실행하여 결과를 만들어내는 편입니다. 시장의 변화에 민첩하게 대응하기 위해서는 빠른 실행력과 과감한 도전 정신이 필수적이라고 믿습니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 최종 사용자의 입장에서 생각하고, 그들의 삶에 긍정적인 영향을 줄 수 있는 사용자 중심의 서비스를 만들고 싶습니다. 사용자의 목소리에 귀 기울이고, 그들의 진짜 문제를 해결해주는 제품을 만드는 것이 저의 가장 큰 목표입니다.",
            "저는 서비스를 개발할 때 사용자의 피드백을 가장 중요한 지표로 생각합니다. 사용자들이 어떤 부분에서 불편함을 느끼는지, 무엇을 원하는지를 파악하고 이를 제품 개선에 적극적으로 반영하는 것이 서비스 성공의 핵심이라고 믿습니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 대규모 사용자가 이용하는 서비스를 장애 없이 안정적으로 운영하는 경험을 쌓고 싶습니다. 이를 위해 견고한 아키텍처 설계, 철저한 테스트, 효과적인 모니터링 시스템 구축 등 서비스 안정성을 높이기 위한 다양한 기술 역량을 기르고자 합니다.",
            "저의 궁극적인 목표는 사용자들이 언제나 믿고 사용할 수 있는, 장애 없는 안정적인 서비스를 만드는 것입니다. 이를 위해 코드 한 줄을 작성하더라도 발생할 수 있는 모든 예외 상황을 고려하며, 시스템의 안정성을 최우선으로 생각합니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 새로운 프로그래밍 언어나 프레임워크, 개발 도구 등을 배우고 익히는 과정 자체를 매우 좋아합니다. 기술 학습을 통해 저의 문제 해결 능력을 향상시키고, 더 효율적이고 창의적인 방법으로 개발 업무를 수행할 수 있게 된다고 생각합니다.",
            "저는 IT 업계의 최신 기술 트렌드와 동향에 대해 항상 많은 관심을 가지고 있습니다. 유명 개발자들의 블로그를 구독하고, 해외 컨퍼런스 자료를 찾아보며, 앞으로 어떤 기술이 중요해질지 예측하고 미리 대비하는 것을 즐깁니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 성공적인 프로젝트는 팀원들 간의 원활한 소통에서 시작된다고 믿으며, 동료들과의 솔직하고 건설적인 대화를 매우 중요하게 생각합니다. 정기적인 미팅과 코드 리뷰를 통해 서로의 생각을 공유하고, 오해 없이 협업하는 문화를 만들고 싶습니다.",
            "훌륭한 팀워크는 멤버들 간의 투명하고 개방적인 소통 문화에서 비롯된다고 굳게 믿습니다. 각자의 진행 상황과 생각을 명확하게 공유하고, 문제가 발생했을 때 함께 머리를 맞대고 해결책을 찾는 과정이 팀의 성공에 필수적입니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 코드 리뷰가 단순히 버그를 찾는 활동이 아니라, 서로의 코드를 통해 배우고 함께 성장하는 중요한 문화라고 생각합니다. 다른 사람의 좋은 코드를 보며 배우고, 저의 코드에 대한 동료의 피드백을 통해 개선점을 찾아나가는 문화를 선호합니다.",
            "동료들과 서로의 코드를 꼼꼼히 리뷰해주고, 그 과정에서 새로운 아이디어를 얻거나 더 나은 구현 방식을 배우는 것을 좋아합니다. 코드 리뷰는 지식을 공유하고, 코드 품질을 높이며, 팀의 전체적인 개발 역량을 향상시키는 최고의 방법이라고 생각합니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 이제 막 개발자로서의 커리어를 시작하는 단계에 있으며, 배움에 대한 열정과 의지가 가득합니다. 빠르게 성장하여 하루빨리 팀에 기여할 수 있는 주니어 개발자가 되는 것이 현재 저의 가장 큰 목표이며, 이를 위해 최선을 다할 준비가 되어 있습니다.",
            "저의 성장을 이끌어주고, 기술적인 깊이를 더할 수 있도록 도와줄 수 있는 실력 있는 시니어 개발자분들께 많이 배우고 싶습니다. 좋은 멘토와 함께 일하면서 저의 잠재력을 최대한 발휘하고, 훌륭한 개발자로 성장하고 싶습니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 수백만, 수천만 사용자의 요청을 안정적으로 처리할 수 있는 대규모 트래픽 시스템의 설계와 구현에 대한 관심이 매우 많습니다. 분산 시스템, 마이크로서비스 아키텍처, 메시지 큐 등 관련 기술들을 깊이 있게 공부하고 있습니다.",
            "미래의 트래픽 증가에 유연하게 대응할 수 있는 확장성 있는 아키텍처를 설계하고 구축하는 경험을 해보고 싶습니다. 비즈니스 성장에 따라 시스템이 어떻게 진화해야 하는지 고민하고, 기술적인 도전을 통해 엔지니어로서 성장하고 싶습니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 제가 작성한 코드가 의도한 대로 정확하게 동작하는지 확인하기 위해, 다양한 시나리오를 고려하여 꼼꼼하게 테스트 케이스를 작성하는 편입니다. 엣지 케이스까지 놓치지 않으려는 노력이 결국 서비스의 품질을 결정한다고 믿습니다.",
            "저는 자동화된 테스트 코드 작성을 통해 서비스의 안정성을 높이는 데 기여하고 싶습니다. 특히 회귀 테스트를 자동화하여, 새로운 기능이 추가되거나 코드가 변경될 때 기존 기능에 영향을 미치지 않는다는 것을 보장하는 것이 중요하다고 생각합니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 며칠 동안 고민하던 복잡한 기술적 문제를 마침내 해결했을 때, 그 어떤 것과도 비교할 수 없는 큰 성취감을 느낍니다. 이러한 문제 해결 과정 자체가 저를 더 단단하고 유능한 개발자로 만들어준다고 생각합니다.",
            "저는 누구도 쉽게 해결하지 못하는 어려운 기술적 난제에 도전하고, 깊이 있는 분석과 창의적인 접근을 통해 해결책을 찾아내는 것을 즐깁니다. 복잡한 문제의 본질을 꿰뚫고, 우아한 해결책을 제시하는 과정에서 큰 희열을 느낍니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 항상 현재의 개발 방식에 만족하지 않고, 팀의 개발 생산성을 높일 수 있는 새로운 방법은 없을지 끊임없이 고민합니다. 더 좋은 개발 도구를 도입하거나, 비효율적인 프로세스를 개선하여 팀원들이 더 중요한 일에 집중할 수 있도록 돕고 싶습니다.",
            "저는 개발팀의 효율성을 저해하는 반복적인 수작업을 발견하면, 이를 자동화하여 모두의 시간을 절약하는 데 큰 관심을 가지고 있습니다. 스크립트를 작성하거나 CI/CD 파이프라인을 개선하여, 팀이 더 빠르고 안정적으로 결과물을 만들어낼 수 있도록 기여하고 싶습니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 방대한 양의 데이터 속에서 의미 있는 패턴이나 인사이트를 발견하고, 이를 통해 비즈니스 가치를 창출하는 것을 좋아합니다. 데이터 분석 기술을 활용하여 서비스의 문제점을 진단하고, 성장을 위한 새로운 기회를 찾아내는 일에 매력을 느낍니다.",
            "저는 사용자들이 남긴 방대한 로그 데이터를 분석하여, 서비스의 어떤 기능이 많이 사용되고 어떤 부분에서 이탈이 발생하는지 등을 파악하고 개선점을 찾는 것에 큰 관심이 있습니다. 데이터를 통해 사용자의 행동을 이해하고, 더 나은 서비스를 만들고 싶습니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 좋은 코드는 단순히 동작하는 것을 넘어, 잘 설계된 구조에서 나온다고 굳게 믿습니다. 소프트웨어의 유연성과 확장성을 위해, SOLID와 같은 객체지향 설계 원칙을 깊이 이해하고 코드에 적용하려고 항상 노력합니다.",
            "저는 소프트웨어를 설계할 때, 객체지향의 5대 원칙(SOLID)을 최대한 지키려고 노력합니다. 각 객체가 단일 책임을 갖고, 확장에 열려 있으며, 서로 느슨하게 결합된 구조를 만드는 것이 유지보수하기 좋고 변화에 유연한 시스템의 기반이라고 생각합니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "전 세계의 개발자들이 함께 만들어나가는 오픈소스 프로젝트에 저의 코드를 기여하여, 제가 받은 기술적 혜택을 커뮤니티에 환원하고 싶습니다. 버그를 수정하거나 작은 기능을 추가하는 것부터 시작하여 의미 있는 기여를 해보고 싶습니다.",
            "제가 매일 사용하는 라이브러리나 프레임워크의 발전에 직접 기여하고, 그 과정에서 더 깊이 있는 기술적 지식을 얻는 경험을 해보고 싶습니다. 오픈소스 활동을 통해 전 세계의 뛰어난 개발자들과 교류하며 성장하고 싶습니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 개발자뿐만 아니라 기획자, 디자이너, 마케터 등 다양한 직군의 동료들과 함께 협업하며 시너지를 만들어내는 것을 즐깁니다. 각자의 전문성을 존중하고 적극적으로 소통할 때, 사용자에게 최고의 가치를 제공하는 제품을 만들 수 있다고 믿습니다.",
            "저는 제품을 만들 때 기획자, 디자이너와 초기 단계부터 긴밀하게 소통하며 함께 아이디어를 구체화해나가는 방식을 선호합니다. 직군 간의 장벽 없이, 하나의 팀으로서 공동의 목표를 향해 나아갈 때 가장 좋은 결과물이 나온다고 생각합니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 현재 회사 업무 외에, 저의 개인적인 성장을 위해 사이드 프로젝트를 꾸준히 진행하고 있습니다. 사이드 프로젝트는 평소에 해보고 싶었던 새로운 기술을 마음껏 실험하고, 저의 아이디어를 실제로 구현해보는 좋은 기회가 됩니다.",
            "저는 업무 시간에 다루지 못하는 새로운 기술이나 언어를 익히기 위해, 퇴근 후나 주말 시간을 활용하여 개인 프로젝트를 진행합니다. 이를 통해 기술 스택을 넓히고, 실무 역량을 강화하며 개발자로서의 경쟁력을 키우고 있습니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 국내외 기술 컨퍼런스에 적극적으로 참여하여, 업계 전문가들의 발표를 통해 새로운 기술 지식과 트렌드를 얻는 것을 중요하게 생각합니다. 컨퍼런스는 저의 기술적 시야를 넓히고, 새로운 영감을 얻을 수 있는 좋은 기회입니다.",
            "저는 다양한 분야의 개발자들과 직접 만나 교류하고, 그들의 경험과 지식을 통해 새로운 인사이트를 얻는 것을 좋아합니다. 기술 세미나나 밋업에 참여하여 네트워킹하며, 제가 미처 생각하지 못했던 다양한 관점을 배우려고 노력합니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 업무를 시작하기 전에, 달성해야 할 명확한 목표를 설정하고 이를 완수하기 위한 구체적인 계획을 세우는 것을 선호합니다. 계획적인 접근 방식은 불필요한 작업을 줄이고, 정해진 시간 안에 높은 품질의 결과물을 만들어내는 데 도움이 됩니다.",
            "저는 여러 가지 업무가 주어졌을 때, 각 업무의 중요도와 긴급성을 판단하여 우선순위를 정하고 체계적으로 처리하는 것이 매우 중요하다고 생각합니다. 이를 통해 중요한 일에 집중하고, 전체적인 업무 효율성을 높일 수 있습니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 과거에 유지보수가 어려운 레거시 코드를 개선하고 리팩토링하는 프로젝트를 수행하면서, 기술적으로나 개인적으로나 정말 많은 것을 배웠습니다. 복잡한 코드를 분석하고, 점진적으로 구조를 개선해나가는 과정에서 큰 성취감을 느꼈습니다.",
            "저는 기술 부채가 쌓여있는 시스템의 문제점을 분석하고, 이를 해결하여 코드 품질을 개선하는 작업에 많은 관심과 흥미를 가지고 있습니다. 리팩토링은 단순히 코드를 정리하는 것이 아니라, 비즈니스의 지속 가능한 성장을 위한 필수적인 투자라고 생각합니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 제가 개발한 기능이나 서비스가 사용자들에게 실질적인 가치를 전달하고, 그들의 삶을 조금이라도 더 편리하게 만들어줄 때 개발자로서 가장 큰 보람을 느낍니다. 기술은 결국 사람을 위해 존재해야 한다고 믿습니다.",
            "제가 밤새워 고민하며 만든 기능이 사용자들에게 좋은 반응을 얻고, '이 기능 덕분에 정말 편해졌다'는 피드백을 받을 때 가장 큰 기쁨과 보람을 느낍니다. 사람들에게 실질적인 도움이 되는 서비스를 만드는 것이 저의 개발 철학입니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 애플리케이션 개발뿐만 아니라, 해당 애플리케이션이 동작하는 인프라를 코드로 관리(IaC)하고 운영을 자동화하는 분야에 많은 관심을 가지고 있습니다. 개발과 운영의 경계를 허물고, 전체적인 서비스의 안정성과 효율성을 높이고 싶습니다.",
            "저는 DevOps 문화에 깊이 공감하며, 개발팀이 코드 작성부터 배포, 운영까지 모든 과정에 참여하는 경험을 쌓고 싶습니다. 특히 Jenkins, Github Actions 등을 활용하여 CI/CD 파이프라인을 구축하고, 배포 과정을 자동화하는 데 기여하고 싶습니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 팀 내에 흩어져 있는 기술 지식이나 문제 해결 경험들을, 팀 기술 블로그에 체계적으로 정리하고 운영하며 다른 동료들과 공유하고 싶습니다. 지식 공유는 팀의 전체적인 역량을 상향 평준화시키는 가장 좋은 방법이라고 생각합니다.",
            "저는 제가 어렵게 배우고 터득한 지식을 다른 사람들도 쉽게 이해할 수 있도록 설명하고, 문서화하는 것을 잘합니다. 이러한 저의 강점을 살려, 팀의 기술적인 자산을 축적하고 전파하는 역할을 수행하고 싶습니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 어떤 문제를 판단하고 의사결정을 내릴 때, 감정이나 편견에 치우치지 않고 논리적인 근거와 합리적인 추론 과정을 통해 결론을 내리려고 항상 노력합니다. 이러한 태도는 특히 기술적인 문제를 해결할 때 매우 중요하다고 생각합니다.",
            "저는 개인의 직감이나 경험에만 의존하여 판단하는 것은 위험할 수 있다고 생각하며, 객관적인 데이터를 기반으로 상황을 분석하고 판단하는 것이 중요하다고 믿습니다. 데이터는 거짓말을 하지 않으며, 가장 합리적인 의사결정의 근거가 됩니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 특정 도메인에 국한되지 않고, 새로운 비즈니스 도메인 지식을 빠르게 학습하고 이해하는 능력이 뛰어납니다. 새로운 분야의 용어와 프로세스를 단기간에 습득하여, 해당 도메인의 문제를 기술적으로 해결하는 데 강점이 있습니다.",
            "저는 금융, 이커머스, 헬스케어 등 다양한 산업 분야의 비즈니스를 경험하면서, 각 산업의 고유한 문제를 기술로 해결하는 일에 큰 매력을 느낍니다. 폭넓은 도메인 경험은 개발자로서의 시야를 넓히고, 더 창의적인 해결책을 제시하는 데 도움이 된다고 생각합니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 서비스 운영 중에 장애가 발생했을 때, 당황하지 않고 침착하게 로그와 데이터를 분석하여 문제의 원인을 찾아내고 해결합니다. 빠른 조치도 중요하지만, 근본적인 원인을 파악하여 같은 실수를 반복하지 않는 것이 더 중요합니다.",
            "장애 상황에서 가장 중요한 것은, 정확한 원인 분석을 통해 다시는 동일한 문제가 재발하지 않도록 방지하는 것이라고 생각합니다. 이를 위해 장애 보고서를 상세히 작성하고, 팀원들과 공유하여 함께 개선 방안을 논의하는 문화를 만들고 싶습니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 팀원들이 개발 과정에서 겪는 불편한 점이나 반복적인 작업을 발견하면, 이를 해결하기 위한 자동화 스크립트나 간단한 도구를 직접 만드는 것을 좋아합니다. 작은 개선이 모여 팀 전체의 생산성을 크게 향상시킬 수 있다고 믿습니다.",
            "저는 개발 과정에서 마주치는 비효율적인 부분이 있으면, 그냥 넘어가지 않고 직접 쉘 스크립트나 파이썬 코드를 짜서 해결하는 편입니다. 저의 작은 노력이 동료들의 시간을 절약해주고, 모두가 더 중요한 일에 집중할 수 있게 만들 때 보람을 느낍니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 여러 사람이 함께 작업하는 프로젝트일수록, 코드의 일관성을 유지하는 것이 매우 중요하다고 생각합니다. 일관성 있는 코드는 가독성을 높이고, 새로운 팀원이 프로젝트에 적응하는 시간을 단축시켜주는 효과가 있습니다.",
            "저는 팀의 코딩 스타일 가이드라인, 즉 코딩 컨벤션을 함께 정하고, 린트(Lint)나 정적 분석 도구를 도입하여 모두가 이를 잘 지키는 문화를 만들고 싶습니다. 이를 통해 코드 리뷰 시 스타일보다는 로직에 더 집중할 수 있게 되기를 바랍니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 사용자의 소중한 데이터를 다루는 서비스일수록, 잠재적인 보안 취약점에 대해 항상 경계하고 방어적인 자세로 코드를 작성해야 한다고 생각합니다. SQL 인젝션, XSS 등 알려진 공격 기법에 대해 항상 유의하며 개발합니다.",
            "저는 안전한 서비스를 만들기 위해, 개발 초기 단계부터 시큐어 코딩 원칙을 철저히 지키려고 노력합니다. 외부로부터의 입력을 항상 의심하고 검증하며, 비밀번호와 같은 민감한 정보는 안전하게 암호화하여 저장하는 것을 기본 원칙으로 삼습니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 최신 기술 정보를 빠르게 습득하기 위해, 영어를 꾸준히 공부하여 해외 기술 문서나 블로그 포스트를 원문으로 읽는 데 큰 어려움이 없습니다. 원문을 직접 읽는 것이 가장 정확하고 깊이 있는 정보를 얻는 방법이라고 생각합니다.",
            "저는 새로운 기술이나 라이브러리에 대한 정보를 얻을 때, 공식 문서를 가장 신뢰하며 주로 영어로 된 자료를 직접 찾아보는 것을 즐깁니다. 번역본을 기다리기보다 원문을 통해 빠르게 학습하고, 이를 팀에 공유하여 기술 경쟁력을 높이고 싶습니다.",
            "약간 유사함"
        ),

        new LabeledTextPair(
            "저는 단순히 뛰어난 실력을 가진 개발자를 넘어, 동료들이 함께 일하고 싶어하는 좋은 동료가 되는 것을 중요한 목표로 삼고 있습니다. 긍정적인 태도와 건설적인 소통으로 팀에 활력을 불어넣는 사람이 되고 싶습니다.",
            "저는 주변 사람들에게 긍정적인 에너지를 전달하고, 함께 있으면 기분이 좋아지는 동료와 함께 일할 때 가장 큰 시너지가 난다고 생각합니다. 저 또한 그런 사람이 되어, 팀 전체에 좋은 영향을 미치는 존재가 되고 싶습니다.",
            "약간 유사함"
        ),

// "관련 없음" 그룹 (30개)

        new LabeledTextPair(
            "저는 고객이 겪고 있는 불편함이나 문제를 기술을 통해 해결해주는 과정에서 개발자로서 가장 큰 보람과 성취감을 느낍니다. 제가 만든 제품이 고객의 삶에 실질적인 도움이 될 때, 저의 일에 대한 자부심이 생깁니다.",
            "저는 빠르게 변화하는 IT 업계의 흐름을 놓치지 않기 위해, 최신 기술 트렌드와 관련된 아티클을 읽거나 컨퍼런스 영상을 찾아보는 것에 많은 관심을 가지고 있습니다. 새로운 기술이 어떤 문제를 해결하는지 이해하는 것을 즐깁니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 이제 막 커리어를 시작하는 주니어 개발자로서, 스펀지처럼 새로운 지식과 경험을 흡수하여 빠르게 성장하고 싶습니다. 선배 개발자들의 노하우를 배우고, 팀에 실질적인 기여를 하는 인재가 되는 것이 저의 목표입니다.",
            "저는 주기적으로 새로운 곳으로 여행을 떠나, 낯선 문화를 직접 경험하고 다양한 사람들을 만나는 것을 좋아합니다. 여행은 저의 시야를 넓혀주고, 일상에서 벗어나 새로운 영감과 활력을 얻게 해주는 소중한 시간입니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 코드를 작성할 때, 미래의 동료나 제 자신이 쉽게 이해하고 수정할 수 있도록 깔끔하고 유지보수하기 좋은 코드를 작성하는 것을 최우선으로 생각합니다. 클린 코드는 협업의 가장 기본이 되는 요소라고 믿습니다.",
            "저는 처음 만나는 사람들과도 스스럼없이 어울리고, 다양한 주제로 대화하며 새로운 관계를 맺어가는 것을 즐깁니다. 사람들과의 소통을 통해 에너지를 얻는 편이며, 좋은 인간관계는 삶을 풍요롭게 만든다고 생각합니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 혼자 일할 때보다, 각기 다른 강점을 가진 팀원들과 서로 협력하여 공동의 목표를 달성해나가는 과정에서 더 큰 시너지를 낼 수 있다고 믿습니다. 팀워크를 통해 더 위대한 성과를 이룰 수 있다고 생각합니다.",
            "저는 평일 동안 쌓인 피로를 풀기 위해, 주말에는 주로 집에서 조용히 휴식을 취하는 것을 선호합니다. 좋아하는 영화를 보거나, 책을 읽거나, 아무 생각 없이 음악을 들으며 재충전의 시간을 갖는 것이 저의 휴식 방법입니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 새로운 프로그래밍 언어나 기술을 배우고, 그것을 활용하여 작은 토이 프로젝트를 만들어보는 과정에서 큰 즐거움을 느낍니다. 배움 그 자체를 즐기며, 이를 통해 개발자로서 꾸준히 성장해나가고 싶습니다.",
            "저는 개인적으로 매운 음식을 잘 먹지 못하는 편입니다. 조금만 매워도 땀이 나고 속이 불편해져서, 떡볶이나 마라탕 같은 음식보다는 담백하고 순한 맛의 음식을 훨씬 더 선호합니다. 그래서 보통 식당 선택권이 넓지 않습니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저의 개발자로서의 궁극적인 목표는, 수많은 사용자가 접속해도 장애 없이 안정적으로 운영되는 견고한 서비스를 만드는 것입니다. 이를 위해 분산 시스템 아키텍처나 데이터베이스 최적화 같은 기술에 관심이 많습니다.",
            "제가 최근에 가장 인상 깊게 본 영화는 드니 빌뇌브 감독의 '듄'입니다. 압도적인 스케일의 영상미와 깊이 있는 세계관, 그리고 배우들의 훌륭한 연기가 어우러져 시간 가는 줄 모르고 몰입해서 봤습니다. 속편이 정말 기대됩니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 단순히 기능을 구현하는 것을 넘어, 사용자가 서비스를 이용하는 전반적인 과정에 대해 깊이 고민하고, 어떻게 하면 더 편리하고 만족스러운 경험을 제공할 수 있을지 항상 연구합니다. 사용자 경험(UX)은 서비스의 성패를 좌우한다고 믿습니다.",
            "저는 아침에 일어나면 가장 먼저 커피 머신으로 향합니다. 진한 에스프레소에 물을 타서 만든 아메리카노 한 잔을 마셔야 비로소 잠이 깨고, 하루를 시작할 활력을 얻는 기분이 듭니다. 저에게 커피는 필수적인 아침 루틴입니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 코드 리뷰가 단순히 코드의 결함을 찾아내는 과정이 아니라, 동료들과 지식을 공유하고 서로에게 배우며 함께 성장할 수 있는 좋은 기회라고 생각합니다. 건설적인 피드백을 통해 더 나은 코드를 만들어나가는 문화를 지향합니다.",
            "저는 반려동물을 선택해야 한다면 고양이보다는 강아지를 더 좋아합니다. 강아지는 사람을 잘 따르고, 함께 산책하거나 뛰어놀면서 교감할 수 있는 점이 매력적입니다. 퇴근하고 집에 왔을 때 반갑게 꼬리치는 모습을 보면 피로가 풀립니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 한번 저에게 주어진 일은, 어떤 어려움이 있더라도 끝까지 책임지고 완수해내는 강한 책임감을 가지고 있습니다. '이 사람에게 맡기면 안심이다'라는 신뢰를 주는 것이 저의 가장 큰 장점이라고 생각합니다.",
            "저는 무더운 여름보다는 차라리 쌀쌀한 겨울을 더 선호하는 편입니다. 더위는 참기 힘들지만, 추위는 옷을 껴입으면 되기 때문입니다. 특히 하얀 눈이 내리는 겨울 풍경을 바라보는 것을 매우 좋아합니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 언젠가 리눅스 커널이나 쿠버네티스 같은 전 세계적으로 널리 사용되는 거대한 오픈소스 프로젝트에 기여하는 실력 있는 개발자가 되고 싶습니다. 제가 받은 기술적 혜택을 커뮤니티에 돌려주는 것이 저의 꿈입니다.",
            "요즘 제가 즐겨 듣는 음악 장르는 재즈(Jazz)입니다. 특히 저녁에 일을 마치고 휴식을 취할 때, 스탠 게츠나 쳇 베이커 같은 연주자들의 부드러운 색소폰이나 트럼펫 연주를 들으면 마음이 편안해지는 것을 느낍니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 복잡한 문제를 더 작은 단위로 나누고, 논리적인 절차에 따라 효율적으로 해결하기 위해 알고리즘과 자료구조를 꾸준히 공부하고 있습니다. 탄탄한 기본기가 결국 좋은 소프트웨어를 만드는 밑거름이 된다고 믿습니다.",
            "최근에 유행하는 성격 유형 검사인 MBTI 테스트를 해봤는데, 저는 '논리적인 사색가' 유형인 INTP가 나왔습니다. 분석적이고 논리적인 것을 좋아하지만, 가끔은 너무 생각에 깊이 빠지는 경향이 있다는 설명이 저와 잘 맞는 것 같습니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 수많은 서버들이 유기적으로 연결되어 동작하는 대규모 시스템의 아키텍처를 설계하고 구축하는 분야에 큰 관심이 있습니다. 마이크로서비스, 분산 데이터베이스, 이벤트 기반 아키텍처 등을 깊이 있게 학습하고 싶습니다.",
            "저는 학창 시절에 친구들과 함께 농구 동아리 활동을 했습니다. 팀원들과 손발을 맞춰 멋진 플레이를 만들어냈을 때의 희열과, 경기가 끝난 후 함께 땀 흘리며 나누던 우정은 아직도 좋은 추억으로 남아 있습니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 제가 작성한 코드가 예기치 않은 상황에서도 안정적으로 동작한다는 것을 보장하기 위해, 테스트 코드를 작성하는 것을 매우 중요하게 생각합니다. 테스트 코드는 미래의 나 자신과 동료들을 위한 가장 좋은 문서라고 믿습니다.",
            "제가 개인적으로 가장 좋아하는 색은 시원하고 안정감을 주는 파란색입니다. 맑은 가을 하늘이나 깊은 바다의 색을 보고 있으면 마음이 차분해지고, 복잡했던 머릿속이 정리되는 기분이 들어서 좋아합니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 개발자에게 가장 중요한 역량 중 하나는 바로 문제 해결 능력이라고 생각하며, 이를 기르기 위해 꾸준히 노력합니다. 어려운 문제에 부딪혔을 때, 포기하지 않고 다양한 각도에서 해결책을 모색하는 훈련을 하고 있습니다.",
            "저는 보통 밤늦게까지 깨어있기보다는, 일찍 잠자리에 들고 아침 일찍 일어나는 '아침형 인간'에 가깝습니다. 조용한 새벽 시간에 집중이 더 잘 되기 때문에, 중요한 작업이나 공부는 주로 오전에 처리하는 편입니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 단순히 저의 개인적인 성장만을 추구하는 것이 아니라, 저의 지식과 경험을 동료들과 공유하고 서로 도우며 팀 전체의 성장에 기여하고 싶습니다. 함께 성장하는 문화 속에서 더 큰 시너지를 낼 수 있다고 믿습니다.",
            "저는 최근에 더 넓고 쾌적한 환경에서 생활하고 싶어서, 오랫동안 살던 동네를 떠나 새로운 곳으로 이사를 했습니다. 아직은 주변 환경이 낯설지만, 새로운 동네를 탐험하고 저만의 아지트를 찾아가는 재미가 쏠쏠합니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 효율적인 데이터 관리를 위해 데이터베이스 정규화 이론에 대해 깊이 이해하고 있으며, 데이터의 중복을 최소화하고 무결성을 유지하는 최적의 테이블 구조를 설계할 수 있습니다. 이는 시스템 성능의 기반이 됩니다.",
            "저는 최근에 공기 정화에 도움이 된다는 몬스테라와 스투키 같은 반려 식물을 키우기 시작했습니다. 매일 아침 식물들에게 물을 주고, 새로운 잎이 돋아나는 것을 보면서 작은 생명력을 느끼는 것이 소소한 행복입니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 소프트웨어를 설계할 때, SOLID와 같은 객체지향 설계 원칙을 지키려고 항상 노력합니다. 좋은 설계는 코드의 재사용성을 높이고, 변화에 유연하게 대처할 수 있는 힘을 길러준다고 굳게 믿고 있습니다.",
            "저는 얼마 전에 운전면허 시험에 합격하여, 이제 막 도로 주행이 가능한 초보 운전자가 되었습니다. 아직은 주차하는 것이 조금 서툴지만, 주말에 차를 몰고 교외로 드라이브를 나가는 상상을 하면 벌써부터 설렙니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 항상 현재의 개발 방식에 안주하지 않고, 반복적인 작업을 자동화하거나 더 나은 도구를 도입하여 개발 생산성을 높이는 데에 많은 관심을 가지고 있습니다. 팀의 효율성을 높이는 것이 곧 제품의 경쟁력으로 이어진다고 생각합니다.",
            "저는 가끔 혼자서 조조 영화를 보는 것을 즐깁니다. 다른 사람들에게 방해받지 않고 오롯이 영화에만 집중할 수 있는 그 시간이 좋습니다. 이른 아침의 한적한 영화관 분위기는 저에게 특별한 해방감을 줍니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 다른 사람이 작성한 좋은 코드를 읽고, 그 안에 담긴 설계 사상이나 문제 해결 방식을 배우는 것을 즐깁니다. 잘 작성된 코드는 어떤 기술 서적보다도 더 많은 것을 가르쳐주는 훌륭한 교과서라고 생각합니다.",
            "저는 건강을 생각해서 몇 년 전부터 탄산음료를 거의 마시지 않고 있습니다. 처음에는 습관을 바꾸는 것이 조금 힘들었지만, 지금은 톡 쏘는 단맛보다는 깔끔하고 시원한 물이나 차를 더 선호하게 되었습니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 버전 관리 시스템인 Git을 매우 능숙하게 다룰 수 있으며, rebase, cherry-pick 등 고급 명령어들을 활용하여 복잡한 협업 상황에서도 깔끔하고 체계적인 커밋 히스토리를 유지하는 데 자신 있습니다.",
            "제가 언젠가 꼭 한번 가보고 싶은 최고의 여행지는 스위스입니다. 그림 같은 알프스 산맥의 대자연 속에서 하이킹을 하고, 깨끗하고 아름다운 호숫가 마을에서 여유로운 시간을 보내는 것이 저의 오랜 꿈입니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 새로운 프로그래밍 언어나 프레임워크가 등장했을 때, 거부감을 갖기보다는 호기심을 가지고 빠르게 익히고 장단점을 파악하는 편입니다. 새로운 기술을 습득하는 능력은 개발자의 중요한 역량 중 하나라고 생각합니다.",
            "저는 스트레스를 받거나 기분 전환이 필요할 때, 주방에서 맛있는 요리를 하는 것을 좋아합니다. 레시피를 보며 재료를 손질하고, 정성을 다해 요리를 완성하는 과정에 집중하다 보면 복잡했던 마음이 차분해지는 것을 느낍니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 서비스의 응답 속도가 느려지는 원인, 즉 성능 병목 지점을 찾아내고, 알고리즘 개선이나 쿼리 튜닝 등을 통해 이를 개선하는 작업을 좋아합니다. 성능 최적화는 사용자의 만족도와 직결되는 중요한 과제라고 생각합니다.",
            "저는 학창 시절부터 친구들과 함께 PC방에 가서 FPS(1인칭 슈팅) 게임을 즐겨 했습니다. 팀원들과 음성 채팅으로 소통하며 전략을 짜고, 적을 물리쳤을 때의 짜릿함은 다른 어떤 취미에서도 느끼기 힘든 재미를 줍니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 최근 로버트 C. 마틴의 '클린 아키텍처'라는 책을 읽고, 유지보수하기 좋고 테스트하기 쉬운 소프트웨어 구조에 대해 깊이 공부하고 있습니다. 좋은 아키텍처는 프로젝트의 장기적인 성공을 좌우한다고 믿습니다.",
            "저는 최근 들어 부쩍 건강에 신경을 쓰기 시작했습니다. 일주일에 세 번 이상은 헬스장에 가서 꾸준히 운동을 하고, 인스턴트 음식보다는 건강한 식단으로 식사를 하려고 노력하면서 몸이 가벼워지는 것을 느끼고 있습니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 저의 생각과 의견을 다른 사람에게 명확하고 논리적으로 전달하는 커뮤니케이션 능력이 좋다고 생각합니다. 특히 복잡한 기술적인 내용을 비전공자도 이해하기 쉽게 설명하는 데 강점이 있습니다.",
            "저는 어렸을 때부터 높은 곳에 올라가는 것을 매우 무서워합니다. 놀이공원에 가도 롤러코스터나 대관람차는 타지 못하고, 높은 빌딩의 유리 바닥 전망대에 서면 다리가 후들거려서 제대로 걷기조차 힘듭니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 한번도 해보지 않았던 생소한 분야의 과제나, 성공을 장담할 수 없는 어려운 기술적인 도전을 즐기는 개발자입니다. 안락한 지대(Comfort Zone)를 벗어나 새로운 것에 부딪힐 때 비로소 성장할 수 있다고 믿습니다.",
            "저는 어렸을 때 부모님의 권유로 몇 년간 피아노를 배웠습니다. 그때는 연습하는 것이 지루하게 느껴졌지만, 지금은 가끔씩 좋아하는 곡의 악보를 찾아 직접 연주해보면서 그때의 경험에 감사함을 느끼곤 합니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 제가 진행한 업무의 과정과 결과를 다른 사람들도 쉽게 파악할 수 있도록, 관련 내용을 꼼꼼하게 문서로 작성하여 남기는 좋은 습관을 가지고 있습니다. 잘 정리된 문서는 팀의 중요한 자산이 된다고 생각합니다.",
            "제가 일 년 중 가장 좋아하는 계절은 선선한 바람이 부는 가을입니다. 너무 덥지도, 춥지도 않은 쾌적한 날씨 속에서 높고 푸른 하늘을 바라보며 공원을 산책하는 것을 무엇보다도 좋아합니다. 독서의 계절이기도 합니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 저의 실력 향상뿐만 아니라, 동료들에게 긍정적인 영향을 주고 팀 전체의 분위기를 밝게 만드는 사람이 되고 싶습니다. 함께 일하는 것만으로도 힘이 되는, 그런 동료가 되는 것이 저의 또 다른 목표입니다.",
            "저는 '민트초코'의 맛을 별로 좋아하지 않습니다. 치약과 초콜릿을 함께 먹는 듯한 그 독특한 맛에 아직 적응하지 못했습니다. 그래서 친구들이 민트초코 아이스크림을 먹을 때, 저는 항상 다른 맛을 선택합니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 어떤 문제에 직면했을 때, 감정적으로 접근하기보다는 현상을 객관적으로 분석하고, 사실에 기반한 논리적인 사고력을 바탕으로 최적의 해결책을 찾아내려고 노력합니다. 이것이 엔지니어의 기본 소양이라고 생각합니다.",
            "저는 최근에 출시된 새로운 스마트폰으로 기기를 변경했습니다. 최신 프로세서 덕분에 앱 실행 속도가 매우 빨라졌고, 특히 카메라 성능이 크게 향상되어 사진 찍는 재미가 생겼습니다. 새로운 기술을 경험하는 것은 늘 즐겁습니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 단순히 동작하는 코드를 만드는 것에 만족하지 않고, 한 줄의 코드를 작성하더라도 장인정신을 가지고 최고의 품질을 추구하는 것을 중요하게 생각합니다. 소프트웨어 장인정신은 코드의 디테일에서 드러난다고 믿습니다.",
            "저는 특별한 약속이 없는 주말에는, 소파에 편안하게 누워서 밀린 유튜브 영상을 보는 것을 즐깁니다. 평소에 관심 있던 분야의 지식 채널이나, 좋아하는 게임 유튜버의 방송을 보다 보면 시간 가는 줄 모릅니다.",
            "관련 없음"
        ),

        new LabeledTextPair(
            "저는 서비스를 개발할 때, 항상 '내가 만약 이 서비스의 사용자라면 어떨까?'라는 질문을 던지며 사용자의 입장에서 생각하려고 노력합니다. 개발자의 시각에 갇히지 않고, 사용자의 목소리에 귀 기울이는 것이 중요하다고 믿습니다.",
            "저는 어렸을 때부터 셜록 홈즈나 아가사 크리스티의 작품 같은 추리 소설을 즐겨 읽었습니다. 복잡하게 얽힌 사건의 단서들을 하나씩 따라가며, 주인공과 함께 범인을 추리해나가는 과정이 매우 흥미진진합니다.",
            "관련 없음"
        )
    );


    void analyzeSimilarityThresholds() throws IOException {
        Map<String, Map<String, List<Double>>> resultByPipeline = new HashMap<>();
        StringBuilder analysisReport = new StringBuilder();
        analysisReport.append("=== 유사도 파이프라인 분석 보고서 ===\n\n");

        for (var pipeline : pipelines) {
            log.info("Testing pipeline: {}", pipeline.getPipelineInfo());
            List<SimilarityScore> results = dataset.stream()
                .map(
                    pair -> new SimilarityScore(
                        pipeline.calculateSimilarity(pair.text1(), pair.text2()),
                        pair.label()
                    ))
                .toList();

            Map<String, List<Double>> groupedResults = results.stream()
                .collect(Collectors.groupingBy(
                    SimilarityScore::label,
                    Collectors.mapping(
                        SimilarityScore::similarity,
                        Collectors.toList())
                ));
            resultByPipeline.put(pipeline.getPipelineInfo(), groupedResults);
        }

        analysisReport.append("1. 파이프라인별 점수 분포 분석\n");
        analysisReport.append("=".repeat(50)).append("\n\n");

        for (var entry : resultByPipeline.entrySet()) {
            String pipelineName = entry.getKey();
            Map<String, List<Double>> results = entry.getValue();
            analysisReport.append(String.format("파이프라인: %s\n", pipelineName));
            analysisReport.append("-".repeat(30)).append("\n");

            for (String label : List.of("매우 유사함", "약간 유사함", "관련 없음")) {
                List<Double> scores = results.getOrDefault(label, List.of());

                if (!scores.isEmpty()) {
                    DoubleSummaryStatistics stats = scores.stream()
                        .mapToDouble(Double::doubleValue)
                        .summaryStatistics();

                    analysisReport.append(String.format(
                        "[%s] 평균: %.4f, 최대: %.4f, 최소: %.4f, 표준편차: %.4f (개수: %d)\n",
                        label, stats.getAverage(), stats.getMax(), stats.getMin(),
                        calculateStandardDeviation(scores), stats.getCount()
                    ));
                }
            }

            analysisReport.append("\n");
        }

        analysisReport.append("2. AI 요약을 위한 임계값 분석\n");
        analysisReport.append("=".repeat(50)).append("\n\n");
        Map<String, ThresholdAnalysis> thresholdAnalyses = new HashMap<>();

        for (var entry : resultByPipeline.entrySet()) {
            String pipelineName = entry.getKey();
            Map<String, List<Double>> results = entry.getValue();
            ThresholdAnalysis analysis = analyzeThresholds(
                results);
            thresholdAnalyses.put(pipelineName, analysis);
            analysisReport.append(String.format("파이프라인: %s\n", pipelineName));
            analysisReport.append(String.format("권장 임계값: %.3f\n", analysis.recommendedThreshold()));
            analysisReport.append(String.format("정확도: %.2f%% (정밀도: %.2f%%, 재현율: %.2f%%)\n",
                analysis.accuracy() * 100, analysis.precision() * 100, analysis.recall() * 100));
            analysisReport.append(String.format("F1-Score: %.3f\n\n", analysis.f1Score()));
        }

        String bestPipeline = thresholdAnalyses.entrySet().stream()
            .max(Map.Entry.comparingByValue((a, b) -> Double.compare(a.f1Score(), b.f1Score())))
            .map(Map.Entry::getKey)
            .orElse("없음");

        analysisReport.append("3. 최종 권장사항\n");
        analysisReport.append("=".repeat(50)).append("\n");
        analysisReport.append(String.format("최적 파이프라인: %s\n", bestPipeline));

        if (thresholdAnalyses.containsKey(bestPipeline)) {
            ThresholdAnalysis bestAnalysis = thresholdAnalyses.get(
                bestPipeline);
            analysisReport.append(
                String.format("권장 임계값: %.3f\n", bestAnalysis.recommendedThreshold()));
            analysisReport.append(String.format("예상 성능: F1-Score %.3f (정확도 %.2f%%)\n\n",
                bestAnalysis.f1Score(), bestAnalysis.accuracy() * 100));
        }

        analysisReport.append("AI 요약 적용 기준:\n");
        analysisReport.append("- 임계값 이상: 기존 요약본 재사용 (중복 내용)\n");
        analysisReport.append("- 임계값 미만: 새로운 AI 요약 생성 (새로운 내용)\n");

        String projectDir = System.getProperty("user.dir");
        String reportPath = Paths.get(projectDir, "similarity_threshold_analysis.txt").toString();

        Files.write(Paths.get(reportPath), analysisReport.toString().getBytes());

        log.info("분석 완료! 결과를 {} 파일에 저장했습니다.", reportPath);
        log.info("최적 파이프라인: {}", bestPipeline);

        System.out.println("\n=== 주요 분석 결과 ===");
        System.out.println("최적 파이프라인: " + bestPipeline);

        if (thresholdAnalyses.containsKey(bestPipeline)) {
            ThresholdAnalysis best = thresholdAnalyses.get(
                bestPipeline);
            System.out.println(String.format("권장 임계값: %.3f", best.recommendedThreshold()));
            System.out.println(String.format("성능: F1-Score %.3f", best.f1Score()));
        }

    }


    private double calculateStandardDeviation(List<Double> values) {

        double mean = values.stream().mapToDouble(Double::doubleValue).average().orElse(0.0);

        double variance = values.stream()
            .mapToDouble(v -> Math.pow(v - mean, 2))
            .sum() / (values.size() - 1);

        return Math.sqrt(variance);

    }


    private ThresholdAnalysis analyzeThresholds(
        Map<String, List<Double>> results) {
        List<Double> similarScores = new ArrayList<>();
        List<Double> dissimilarScores = new ArrayList<>();

        similarScores.addAll(results.getOrDefault("매우 유사함", List.of()));
        dissimilarScores.addAll(results.getOrDefault("약간 유사함", List.of()));
        dissimilarScores.addAll(results.getOrDefault("관련 없음", List.of()));

        double bestThreshold = 0.0;
        double bestF1 = 0.0;
        double bestAccuracy = 0.0;
        double bestPrecision = 0.0;
        double bestRecall = 0.0;

        for (double threshold = 0.0; threshold <= 1.0; threshold += 0.01) {

            final double currentThreshold = threshold;

            int truePositive = (int) similarScores.stream()
                .mapToLong(s -> s >= currentThreshold ? 1L : 0L).sum();
            int falsePositive = (int) dissimilarScores.stream()
                .mapToLong(s -> s >= currentThreshold ? 1L : 0L).sum();
            int falseNegative = (int) similarScores.stream()
                .mapToLong(s -> s < currentThreshold ? 1L : 0L).sum();
            int trueNegative = (int) dissimilarScores.stream()
                .mapToLong(s -> s < currentThreshold ? 1L : 0L).sum();

            double precision = truePositive + falsePositive > 0 ?
                (double) truePositive / (truePositive + falsePositive) : 0.0;

            double recall = truePositive + falseNegative > 0 ?
                (double) truePositive / (truePositive + falseNegative) : 0.0;

            double f1 =
                precision + recall > 0 ? 2 * (precision * recall) / (precision + recall) : 0.0;

            double accuracy = (double) (truePositive + trueNegative) /
                (truePositive + falsePositive + falseNegative + trueNegative);

            if (f1 > bestF1) {
                bestF1 = f1;
                bestThreshold = threshold;
                bestAccuracy = accuracy;
                bestPrecision = precision;
                bestRecall = recall;
            }
        }

        return new ThresholdAnalysis(
            bestThreshold, bestAccuracy, bestPrecision, bestRecall,
            bestF1);
    }


    private record ThresholdAnalysis(
        double recommendedThreshold,
        double accuracy,
        double precision,
        double recall,
        double f1Score
    ) {

    }


    private record SimilarityScore(double similarity, String label) {

    }

    public static void main(String[] args) throws IOException {
        SimilarityThresholdAnalysis analysis = new SimilarityThresholdAnalysis();
        analysis.analyzeSimilarityThresholds();
    }
}